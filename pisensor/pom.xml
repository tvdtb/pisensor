<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.trivadis</groupId>
	<artifactId>pisensor</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<paho.version>0.4.0</paho.version>
	</properties>

	<build>
		<finalName>${project.artifactId}</finalName>
	</build>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.paho</groupId>
			<artifactId>mqtt-client</artifactId>
			<version>${paho.version}</version>
		</dependency>

		<!-- This one relies on pi4j on raspberry pi -->
		<dependency>
			<groupId>com.pi4j</groupId>
			<artifactId>pi4j-core</artifactId>
			<version>1.0</version>
		</dependency>


		<!-- Morphia for mongobd -->
		<dependency>
			<groupId>org.mongodb.morphia</groupId>
			<artifactId>morphia</artifactId>
			<version>0.109</version>
		</dependency>


		<!-- cdi extensions -->
		<dependency>
			<groupId>com.trivadis</groupId>
			<artifactId>cdiext</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>


	</dependencies>


	<profiles>
		<profile>
			<id>raspberry</id>

			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<build>

				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<artifactSet>
										<!-- only include the artifact itself -->
										<includes>
											<include>${project.groupId}:${project.artifactId}</include>
										</includes>
									</artifactSet>
									<transformers>
										<!-- exclude beans.xml and include raspberry pi version -->
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
											<resource>META-INF/beans.xml</resource>
											<resource>WEB-INF/classes/META-INF/beans.xml</resource>
										</transformer>
										<transformer
											implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
											<resource>WEB-INF/beans.xml</resource>
											<file>src/main/resources-pi/META-INF/beans.xml</file>
										</transformer>
									</transformers>
								</configuration>
							</execution>
						</executions>
					</plugin>


				</plugins>
			</build>
		</profile>


		<profile>
			<id>wildfly-swarm</id>

			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<properties>
				<version.wildfly.swarm>1.0.0.Final</version.wildfly.swarm>
			</properties>

			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.wildfly.swarm</groupId>
						<artifactId>bom</artifactId>
						<version>${version.wildfly.swarm}</version>
						<scope>import</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>

			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.swarm</groupId>
						<artifactId>wildfly-swarm-plugin</artifactId>
						<version>${version.wildfly.swarm}</version>
						<executions>
							<execution>
								<goals>
									<goal>package</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>

			</build>

			<dependencies>
				<dependency>
					<groupId>org.wildfly.swarm</groupId>
					<artifactId>jaxrs</artifactId>
				</dependency>
				<dependency>
					<groupId>org.wildfly.swarm</groupId>
					<artifactId>jaxrs-cdi</artifactId>
				</dependency>
				<dependency>
					<groupId>org.wildfly.swarm</groupId>
					<artifactId>cdi</artifactId>
				</dependency>
			</dependencies>
		</profile>


		<profile>
			<id>servlet-only</id>

			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<dependencies>
				<dependency>
					<groupId>org.glassfish.jersey.core</groupId>
					<artifactId>jersey-server</artifactId>
					<version>2.23.2</version>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.containers</groupId>
					<artifactId>jersey-container-servlet</artifactId>
					<version>2.23.2</version>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.ext.cdi</groupId>
					<artifactId>jersey-cdi1x</artifactId>
					<version>2.23.2</version>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.media</groupId>
					<artifactId>jersey-media-json-jackson</artifactId>
					<version>2.23.2</version>
				</dependency>
				<dependency>
					<groupId>org.jboss.weld.servlet</groupId>
					<artifactId>weld-servlet</artifactId>
					<version>2.2.11.Final</version>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>9.4.0.M1</version>
					</plugin>
				</plugins>
			</build>
		</profile>



		<profile>
			<id>payara-microedition</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.5.0</version>
						<dependencies>
							<dependency>
								<groupId>fish.payara.extras</groupId>
								<artifactId>payara-microprofile</artifactId>
								<version>1.0</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>payara-uber-jar</id>
								<phase>package</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>fish.payara.micro.PayaraMicro</mainClass>
									<arguments>
										<argument>--deploy</argument>
										<argument>${basedir}/target/${project.build.finalName}.war</argument>
										<argument>--outputUberJar</argument>
										<argument>${basedir}/target/${project.build.finalName}.jar</argument>
									</arguments>
									<includeProjectDependencies>false</includeProjectDependencies>
									<includePluginDependencies>true</includePluginDependencies>
									<executableDependency>
										<groupId>fish.payara.extras</groupId>
										<artifactId>payara-microprofile</artifactId>
									</executableDependency>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<repositories>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
		<repository>
			<id>Eclipse Paho Repo</id>
			<url>https://repo.eclipse.org/content/repositories/paho-releases/</url>
		</repository>
	</repositories>
</project>
